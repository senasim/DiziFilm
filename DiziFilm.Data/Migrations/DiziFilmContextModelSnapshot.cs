// <auto-generated />
using System;
using DiziFilm.Model.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiziFilm.Model.Migrations
{
    [DbContext(typeof(DiziFilmContext))]
    partial class DiziFilmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiziFilm.Model.Entity.Bolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("BolumAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BolumSayisi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SezonId")
                        .HasColumnType("int");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<DateTime?>("YayinTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DiziId");

                    b.HasIndex(new[] { "SezonId" }, "IX_Bolum_SezonId");

                    b.ToTable("Bolum", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Diller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DilAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Diller", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Dizi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BaslamaTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DilId")
                        .HasColumnType("int");

                    b.Property<int?>("DillerId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Dizi_1");

                    b.HasIndex("DilId");

                    b.HasIndex("DillerId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Dizi", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.DiziAfi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiziId")
                        .HasColumnType("int");

                    b.Property<string>("DosyaTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaYolu")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DiziId" }, "IX_DiziAfis_DiziId");

                    b.ToTable("DiziAfis");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.DiziOyuncu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("OyuncuId")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DiziId" }, "IX_DiziOyuncu_DiziId");

                    b.HasIndex(new[] { "OyuncuId" }, "IX_DiziOyuncu_OyuncuId");

                    b.ToTable("DiziOyuncu", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.DiziTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DiziId" }, "IX_DiziTur_DiziId");

                    b.HasIndex(new[] { "TurId" }, "IX_DiziTur_TurId");

                    b.ToTable("DiziTur", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Favori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("BolumId")
                        .HasColumnType("int");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiziId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EklemeTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_favoriler");

                    b.HasIndex("FilmId");

                    b.HasIndex(new[] { "BolumId" }, "IX_Favori_BolumId");

                    b.HasIndex(new[] { "DiziId" }, "IX_Favori_DiziId");

                    b.HasIndex(new[] { "KullaniciId" }, "IX_Favori_KullaniciId");

                    b.ToTable("Favori", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CikisTarihi")
                        .HasColumnType("date");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DilId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Imdb")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DilId");

                    b.ToTable("Film", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmAfi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosyaTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaYolu")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmId" }, "IX_FilmAfis_FilmId");

                    b.ToTable("FilmAfis");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmOyuncu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OyuncuId")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmId" }, "IX_FilmOyuncu_FilmId");

                    b.HasIndex(new[] { "OyuncuId" }, "IX_FilmOyuncu_OyuncuId");

                    b.ToTable("FilmOyuncu", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmPlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("PlatformId");

                    b.ToTable("FilmPlatform", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmId" }, "IX_FilmTur_FilmId");

                    b.HasIndex(new[] { "TurId" }, "IX_FilmTur_TurId");

                    b.ToTable("FilmTur", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.KullaniciRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "KullaniciId" }, "IX_KullaniciRol_KullaniciId");

                    b.HasIndex(new[] { "RolId" }, "IX_KullaniciRol_RolId");

                    b.ToTable("KullaniciRol", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Kullanicilar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KullaniciAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Baslik")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Menuİcon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sira")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UstMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Oyuncu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Biyografi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DogumYeri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_oyuncular");

                    b.ToTable("Oyuncu", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlatformAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Platform", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolAdi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK_Roller");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Sezon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("KacinciSezon")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DiziId" }, "IX_Sezon_DiziId");

                    b.ToTable("Sezon", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Turler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TurAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Turler", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YetkiRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DeleteYetki")
                        .HasColumnType("bit");

                    b.Property<bool?>("InsertYetki")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<bool?>("SelectYetki")
                        .HasColumnType("bit");

                    b.Property<bool?>("UpdateYetki")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex(new[] { "RolId" }, "IX_YetkiRol_RolId");

                    b.ToTable("YetkiRol", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Yonetmen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("MiniBio")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YonetmenTurId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_yonetmen");

                    b.HasIndex(new[] { "YonetmenTurId" }, "IX_Yonetmen_YonetmenTurId");

                    b.ToTable("Yonetmen");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YonetmenDizi", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("YonetmenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DiziId" }, "IX_YonetmenDizi_DiziId");

                    b.HasIndex(new[] { "YonetmenId" }, "IX_YonetmenDizi_YonetmenId");

                    b.ToTable("YonetmenDizi", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YonetmenFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("YonetmenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmId" }, "IX_YonetmenFilm_FilmId");

                    b.HasIndex(new[] { "YonetmenId" }, "IX_YonetmenFilm_YonetmenId");

                    b.ToTable("YonetmenFilm", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YonetmenTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("YonetmenTuru", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YorumDizi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiziId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Puan")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("YorumTarih")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DiziId" }, "IX_YorumDizi_DiziId");

                    b.HasIndex(new[] { "KullaniciId" }, "IX_YorumDizi_KullaniciId");

                    b.ToTable("YorumDizi", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YorumFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Puan")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("YorumTarih")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmId" }, "IX_YorumFilm_FilmId");

                    b.HasIndex(new[] { "KullaniciId" }, "IX_YorumFilm_KullaniciId");

                    b.ToTable("YorumFilm", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesi", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EklemeTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("ListeAdi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_İzlemeListesi_1");

                    b.HasIndex(new[] { "KullaniciId" }, "IX_İzlemeListesi_KullaniciId");

                    b.ToTable("İzlemeListesi", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesiDizi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("ListeId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("İzlemeListesiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("İzlemeListesiId");

                    b.HasIndex(new[] { "DiziId" }, "IX_İzlemeListesiDizi_DiziId");

                    b.ToTable("İzlemeListesiDizi", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesiFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("İzlemeListesiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("İzlemeListesiId");

                    b.HasIndex(new[] { "FilmId" }, "IX_İzlemeListesiFilm_FilmId");

                    b.ToTable("İzlemeListesiFilm", (string)null);
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Bolum", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", null)
                        .WithMany("Bolumler")
                        .HasForeignKey("DiziId");

                    b.HasOne("DiziFilm.Model.Entity.Sezon", "Sezon")
                        .WithMany("Bolums")
                        .HasForeignKey("SezonId")
                        .HasConstraintName("FK_Bolum_Sezon");

                    b.Navigation("Sezon");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Dizi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Diller", "Diller")
                        .WithMany()
                        .HasForeignKey("DilId")
                        .HasConstraintName("FK_Dizi_Diller");

                    b.HasOne("DiziFilm.Model.Entity.Diller", null)
                        .WithMany("Diziler")
                        .HasForeignKey("DillerId");

                    b.HasOne("DiziFilm.Model.Entity.Platform", "Platform")
                        .WithMany("Dizis")
                        .HasForeignKey("PlatformId")
                        .HasConstraintName("FK_Dizi_Platform");

                    b.Navigation("Diller");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.DiziAfi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("DiziAfis")
                        .HasForeignKey("DiziId")
                        .HasConstraintName("FK_DiziAfis_Dizi");

                    b.Navigation("Dizi");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.DiziOyuncu", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("DiziOyuncus")
                        .HasForeignKey("DiziId")
                        .IsRequired()
                        .HasConstraintName("FK_DiziOyuncu_Dizi");

                    b.HasOne("DiziFilm.Model.Entity.Oyuncu", "Oyuncu")
                        .WithMany("DiziOyuncus")
                        .HasForeignKey("OyuncuId")
                        .IsRequired()
                        .HasConstraintName("FK_DiziOyuncu_oyuncular");

                    b.Navigation("Dizi");

                    b.Navigation("Oyuncu");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.DiziTur", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("DiziTurs")
                        .HasForeignKey("DiziId")
                        .IsRequired()
                        .HasConstraintName("FK_DiziTur_Dizi");

                    b.HasOne("DiziFilm.Model.Entity.Turler", "Tur")
                        .WithMany("DiziTurs")
                        .HasForeignKey("TurId")
                        .IsRequired()
                        .HasConstraintName("FK_DiziTur_Turler");

                    b.Navigation("Dizi");

                    b.Navigation("Tur");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Favori", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Bolum", "Bolum")
                        .WithMany("Favoris")
                        .HasForeignKey("BolumId")
                        .HasConstraintName("FK_Favori_Bolum");

                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("Favoris")
                        .HasForeignKey("DiziId")
                        .HasConstraintName("FK_Favori_Dizi");

                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("Favoris")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_Favori_Film");

                    b.HasOne("DiziFilm.Model.Entity.Kullanicilar", "KullaniciNavigation")
                        .WithMany("Favoris")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_Favori_Kullanicilar");

                    b.Navigation("Bolum");

                    b.Navigation("Dizi");

                    b.Navigation("Film");

                    b.Navigation("KullaniciNavigation");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Film", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Diller", "Dil")
                        .WithMany("Films")
                        .HasForeignKey("DilId")
                        .HasConstraintName("FK_Film_Diller");

                    b.Navigation("Dil");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmAfi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("FilmAfis")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_FilmAfis_Film");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmOyuncu", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("FilmOyuncus")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_FilmOyuncu_Film");

                    b.HasOne("DiziFilm.Model.Entity.Oyuncu", "Oyuncu")
                        .WithMany("FilmOyuncus")
                        .HasForeignKey("OyuncuId")
                        .HasConstraintName("FK_FilmOyuncu_oyuncular");

                    b.Navigation("Film");

                    b.Navigation("Oyuncu");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmPlatform", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("FilmPlatforms")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_FilmPlatform_Film");

                    b.HasOne("DiziFilm.Model.Entity.Platform", "Platform")
                        .WithMany("FilmPlatforms")
                        .HasForeignKey("PlatformId")
                        .HasConstraintName("FK_FilmPlatform_Platform");

                    b.Navigation("Film");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.FilmTur", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("FilmTurs")
                        .HasForeignKey("FilmId")
                        .IsRequired()
                        .HasConstraintName("FK_FilmTur_Film");

                    b.HasOne("DiziFilm.Model.Entity.Turler", "Tur")
                        .WithMany("FilmTurs")
                        .HasForeignKey("TurId")
                        .IsRequired()
                        .HasConstraintName("FK_FilmTur_Turler");

                    b.Navigation("Film");

                    b.Navigation("Tur");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.KullaniciRol", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Kullanicilar", "Kullanici")
                        .WithMany("KullaniciRols")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_KullaniciRol_Kullanicilar");

                    b.HasOne("DiziFilm.Model.Entity.Rol", "Rol")
                        .WithMany("KullaniciRols")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_KullaniciRol_Roller");

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Sezon", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("Sezons")
                        .HasForeignKey("DiziId")
                        .IsRequired()
                        .HasConstraintName("FK_Sezon_Dizi");

                    b.Navigation("Dizi");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YetkiRol", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Menu", "Menu")
                        .WithMany("YetkiRols")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_YetkiRol_Menu");

                    b.HasOne("DiziFilm.Model.Entity.Rol", "Rol")
                        .WithMany("YetkiRols")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_YetkiRol_Roller");

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Yonetmen", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.YonetmenTuru", "YonetmenTur")
                        .WithMany("Yonetmen")
                        .HasForeignKey("YonetmenTurId")
                        .IsRequired()
                        .HasConstraintName("FK_yonetmen_YonetmenTuru");

                    b.Navigation("YonetmenTur");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YonetmenDizi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("YonetmenDizis")
                        .HasForeignKey("DiziId")
                        .IsRequired()
                        .HasConstraintName("FK_YonetmenDizi_Dizi");

                    b.HasOne("DiziFilm.Model.Entity.Yonetmen", "Yonetmen")
                        .WithMany("YonetmenDizis")
                        .HasForeignKey("YonetmenId")
                        .IsRequired()
                        .HasConstraintName("FK_YonetmenDizi_yonetmen");

                    b.Navigation("Dizi");

                    b.Navigation("Yonetmen");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YonetmenFilm", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("YonetmenFilms")
                        .HasForeignKey("FilmId")
                        .IsRequired()
                        .HasConstraintName("FK_YonetmenFilm_Film");

                    b.HasOne("DiziFilm.Model.Entity.Yonetmen", "Yonetmen")
                        .WithMany("YonetmenFilms")
                        .HasForeignKey("YonetmenId")
                        .IsRequired()
                        .HasConstraintName("FK_YonetmenFilm_yonetmen");

                    b.Navigation("Film");

                    b.Navigation("Yonetmen");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YorumDizi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("YorumDizis")
                        .HasForeignKey("DiziId")
                        .HasConstraintName("FK_YorumDizi_Dizi");

                    b.HasOne("DiziFilm.Model.Entity.Kullanicilar", "Kullanici")
                        .WithMany("YorumDizis")
                        .HasForeignKey("KullaniciId")
                        .IsRequired()
                        .HasConstraintName("FK_YorumDizi_Kullanicilar");

                    b.Navigation("Dizi");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YorumFilm", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("YorumFilms")
                        .HasForeignKey("FilmId")
                        .IsRequired()
                        .HasConstraintName("FK_YorumFilm_Film");

                    b.HasOne("DiziFilm.Model.Entity.Kullanicilar", "Kullanici")
                        .WithMany("YorumFilms")
                        .HasForeignKey("KullaniciId")
                        .IsRequired()
                        .HasConstraintName("FK_YorumFilm_Kullanicilar");

                    b.Navigation("Film");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Kullanicilar", "Kullanici")
                        .WithMany("İzlemeListesis")
                        .HasForeignKey("KullaniciId")
                        .IsRequired()
                        .HasConstraintName("FK_izlemelistesi_Kullanicilar");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesiDizi", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Dizi", "Dizi")
                        .WithMany("İzlemeListesiDizis")
                        .HasForeignKey("DiziId")
                        .HasConstraintName("FK_İzlemeListesiDizi_Dizi");

                    b.HasOne("DiziFilm.Model.Entity.İzlemeListesi", "İzlemeListesi")
                        .WithMany("IzlemeListesiDiziler")
                        .HasForeignKey("İzlemeListesiId");

                    b.Navigation("Dizi");

                    b.Navigation("İzlemeListesi");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesiFilm", b =>
                {
                    b.HasOne("DiziFilm.Model.Entity.Film", "Film")
                        .WithMany("İzlemeListesiFilms")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_İzlemeListesiFilm_Film");

                    b.HasOne("DiziFilm.Model.Entity.İzlemeListesi", "İzlemeListesi")
                        .WithMany("IzlemeListesiFilmler")
                        .HasForeignKey("İzlemeListesiId");

                    b.Navigation("Film");

                    b.Navigation("İzlemeListesi");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Bolum", b =>
                {
                    b.Navigation("Favoris");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Diller", b =>
                {
                    b.Navigation("Diziler");

                    b.Navigation("Films");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Dizi", b =>
                {
                    b.Navigation("Bolumler");

                    b.Navigation("DiziAfis");

                    b.Navigation("DiziOyuncus");

                    b.Navigation("DiziTurs");

                    b.Navigation("Favoris");

                    b.Navigation("Sezons");

                    b.Navigation("YonetmenDizis");

                    b.Navigation("YorumDizis");

                    b.Navigation("İzlemeListesiDizis");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Film", b =>
                {
                    b.Navigation("Favoris");

                    b.Navigation("FilmAfis");

                    b.Navigation("FilmOyuncus");

                    b.Navigation("FilmPlatforms");

                    b.Navigation("FilmTurs");

                    b.Navigation("YonetmenFilms");

                    b.Navigation("YorumFilms");

                    b.Navigation("İzlemeListesiFilms");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Kullanicilar", b =>
                {
                    b.Navigation("Favoris");

                    b.Navigation("KullaniciRols");

                    b.Navigation("YorumDizis");

                    b.Navigation("YorumFilms");

                    b.Navigation("İzlemeListesis");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Menu", b =>
                {
                    b.Navigation("YetkiRols");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Oyuncu", b =>
                {
                    b.Navigation("DiziOyuncus");

                    b.Navigation("FilmOyuncus");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Platform", b =>
                {
                    b.Navigation("Dizis");

                    b.Navigation("FilmPlatforms");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Rol", b =>
                {
                    b.Navigation("KullaniciRols");

                    b.Navigation("YetkiRols");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Sezon", b =>
                {
                    b.Navigation("Bolums");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Turler", b =>
                {
                    b.Navigation("DiziTurs");

                    b.Navigation("FilmTurs");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.Yonetmen", b =>
                {
                    b.Navigation("YonetmenDizis");

                    b.Navigation("YonetmenFilms");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.YonetmenTuru", b =>
                {
                    b.Navigation("Yonetmen");
                });

            modelBuilder.Entity("DiziFilm.Model.Entity.İzlemeListesi", b =>
                {
                    b.Navigation("IzlemeListesiDiziler");

                    b.Navigation("IzlemeListesiFilmler");
                });
#pragma warning restore 612, 618
        }
    }
}
